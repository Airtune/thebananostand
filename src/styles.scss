@import '~@brightlayer-ui/colors/palette.scss';
@import '~@angular/material/_theming.scss';
@import '~@angular/material/prebuilt-themes/deeppurple-amber.css'; // Tooltip needs this theme to work?
@import '~@brightlayer-ui/angular-themes/blui-component-theme';
@import '~@brightlayer-ui/angular-themes/blueTheme';
@import '~@brightlayer-ui/angular-themes/margins';
@import '~@brightlayer-ui/angular-themes/fonts';
@import '~@brightlayer-ui/angular-themes/common';
@import '~@brightlayer-ui/colors/palette';

.nano {
}

.banano-yellow {
    $material-theme-primary: mat-palette($blui-yellow, 900);
    $material-theme-accent: mat-palette($blui-yellow, 900);
    $material-theme-warn: mat-palette($blui-red, 300);
    $light-theme: map-merge(
        mat-light-theme($material-theme-primary, $material-theme-accent, $material-theme-warn),
        (
            foreground: (
                text: map-get($blui-black, 500),
                secondary-text: map-get($blui-gray, 500),
                hint-text: map-get($blui-black, 400),
                base: map-get($blui-darkBlack, 900),
                divider: rgba(66, 78, 84, 0.12),
                dividers: $dark-dividers,
                disabled: rgba(66, 78, 84, 0.3),
                disabled-button: rgba(black, 0.26),
                disabled-text: rgba(66, 78, 84, 0.3),
                elevation: map-get($blui-darkBlack, 900),
                icon: rgba(black, 0.54),
                icons: rgba(black, 0.54),
                slider-min: rgba(black, 0.87),
                slider-off: rgba(black, 0.26),
                slider-off-active: rgba(black, 0.38),
            ),
            background: (
                status-bar: map_get($mat-grey, 300),
                app-bar: map-get($blui-gray, 50),
                background: map-get($blui-white, 200),
                hover: rgba(black, 0.04),
                card: map-get($blui-white, 50),
                dialog: map-get($blui-white, 50),
                disabled-button: rgba(114, 126, 132, 0.12),
                raised-button: map-get($blui-white, 50),
                focused-button: $dark-focused,
                selected-button: map-get($blui-gray, 300),
                selected-disabled-button: map-get($blui-gray, 400),
                disabled-button-toggle: map-get($blui-gray, 200),
                unselected-chip: map-get($blui-gray, 300),
                disabled-list-option: map-get($blui-gray, 200),
            ),
        )
    );

    @include angular-material-theme($light-theme);
    @include blui-components-theme($light-theme);
    @include bluetheme($light-theme);
    @include bodyfont();
}

.banano-green {
    $material-theme-primary: mat-palette($blui-green, 700);
    $material-theme-accent: mat-palette($blui-green, 700);
    $material-theme-warn: mat-palette($blui-red, 300);
    $light-theme: map-merge(
        mat-light-theme($material-theme-primary, $material-theme-accent, $material-theme-warn),
        (
            foreground: (
                text: map-get($blui-black, 500),
                secondary-text: map-get($blui-gray, 500),
                hint-text: map-get($blui-black, 400),
                base: map-get($blui-darkBlack, 900),
                divider: rgba(66, 78, 84, 0.12),
                dividers: $dark-dividers,
                disabled: rgba(66, 78, 84, 0.3),
                disabled-button: rgba(black, 0.26),
                disabled-text: rgba(66, 78, 84, 0.3),
                elevation: map-get($blui-darkBlack, 900),
                icon: rgba(black, 0.54),
                icons: rgba(black, 0.54),
                slider-min: rgba(black, 0.87),
                slider-off: rgba(black, 0.26),
                slider-off-active: rgba(black, 0.38),
            ),
            background: (
                status-bar: map_get($mat-grey, 300),
                app-bar: map-get($blui-gray, 50),
                background: map-get($blui-white, 200),
                hover: rgba(black, 0.04),
                card: map-get($blui-white, 50),
                dialog: map-get($blui-white, 50),
                disabled-button: rgba(114, 126, 132, 0.12),
                raised-button: map-get($blui-white, 50),
                focused-button: $dark-focused,
                selected-button: map-get($blui-gray, 300),
                selected-disabled-button: map-get($blui-gray, 400),
                disabled-button-toggle: map-get($blui-gray, 200),
                unselected-chip: map-get($blui-gray, 300),
                disabled-list-option: map-get($blui-gray, 200),
            ),
        )
    );

    @include angular-material-theme($light-theme);
    @include blui-components-theme($light-theme);
    @include bluetheme($light-theme);
    @include bodyfont();
}

html,
body {
    height: 100%;
    margin: 0;
    padding: 0;
    background: #f8f8f8;
}

.app-root {
    display: flex;
    flex-direction: column;
    min-height: 100vh;
}

.app-toolbar {
    position: sticky;
    position: -webkit-sticky;
    top: 0;
    z-index: 1000;
}

.app-body {
    display: flex;
    justify-content: center;
    flex-grow: 1;
    width: 100%;
    padding: 32px 64px;
    box-sizing: border-box;
    background-color: rgba(235, 235, 255, 0.29);

    .app-body-content {
        max-width: 1200px;
        width: 100%;
        display: flex;
        flex-direction: column;
        align-items: center;
        .app-title {
            margin-bottom: 16px;
            text-align: center;
        }

        mat-divider.mat-divider.blui-info-list-item-partial-divider {
            position: relative;
            bottom: 0;
            right: 0;
            left: 0;
            width: calc(100%);
        }
    }
}

.link {
    color: map-get($blui-blue, 500);
    text-decoration: underline;
    cursor: pointer;
}

#qr-code {
    width: 120px !important;
    height: 120px !important;
    border-radius: 4px;
    border: 1px solid #cbcbcb78;
}

.mat-dialog-container {
    padding-bottom: 0 !important;
}

//HACK
.blui-info-list-item-content .blui-info-list-item-title-wrapper {
    line-height: 1.3 !important;
}

.loading-button {
    display: flex !important;
    height: 36px;
    justify-content: center;
    align-items: center;
    $duration: 200ms;
    $animationTimingFunction: ease-out;
    .button-text-container {
        animation: fadeInAnimation $duration $animationTimingFunction;
        &.isLoading {
            display: none;
        }
    }
    .spinner-container {
        animation: fadeInAnimation $duration $animationTimingFunction;
        display: none;
        margin: 0 auto;
        &.isLoading {
            display: block;
        }

        .mat-progress-spinner,
        .mat-spinner {
            circle {
                stroke: white !important;
            }
        }
    }
}
